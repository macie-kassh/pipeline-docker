version: '2'

services:
  # data container
  databox:
    image: devopsopen/docker-base
    volumes:
      - /data/configdb
      - /data/db
      # for gitlab
      - /etc/gitlab
      - /var/opt/gitlab
      - /var/log/gitlab
      ## for Jira
      #- /var/atlassian/jira
      #- /opt/atlassian/jira/logs
      # for sonarqube
      - /opt/sonarqube/data
      - /opt/sonarqube/extensions
      # for hygieia
      - /hygieia/logs
      # for portal
      - /portal/config
      - /portal/log
      - /portal/data
      # for Redmine
      - /usr/src/redmine/files

  # database service: mongodb
  mongo:
    image: devopsopen/docker-com-mongo
    ports:
      - "27018:27017"
    volumes_from:
      - databox
    restart: never

  # source configuration management: gitlab
  gitlab:
    image: devopsopen/docker-scm-gitlab
    ports:
      - "9010:80"
    expose:
      - "443"
      - "22"
    volumes_from:
      - databox
    env_file:
      - ./opendevops_pipeline.env
    restart: never

  # repository management: nexus
  nexus:
    image: devopsopen/docker-repo-nexus
    ports:
      - "9011:8081"
    env_file:
      - ./opendevops_pipeline.env
    restart: never

  # continous assesement : wekan
  wekan:
    image: devopsopen/docker-ca-wekan
    ports:
      - "9090:80"
    links:
      - mongo:db
    env_file:
      - ./opendevops_pipeline.env
    restart: never

  # Requirement Management : Jira
  jira:
    image: devopsopen/docker-ca-jira
    ports:
      - "9091:8080"
    volumes:
      - /var/atlassian/jira
      - /opt/atlassian/jira/logs
    env_file:
      - ./opendevops_pipeline.env
    restart: never

  # Requirement Management : Redmine
  redmine:
    image: devopsopen/docker-ca-redmine
    ports:
      - "9092:3000"
    volumes:
      - /usr/src/redmine/files
    env_file:
      - ./opendevops_pipeline.env
    restart: never

  # continous integration : jenkins
  jenkins:
    image: devopsopen/docker-ci-jenkins
    ports:
      - "9080:8080"
    expose:
      - "50000"
    env_file:
      - jenkins-master.env
    environment:
      - JAVA_OPTS=-Djava.awt.headless=true
                  -Djenkins.install.runSetupWizard=false
                  -Dhttp.proxyHost=${http_proxy_host}
                  -Dhttp.proxyPort=${http_proxy_port}
                  -Dhttps.proxyHost=${https_proxy_host}
                  -Dhttps.proxyPort=${https_proxy_port}
                  -Duser.timezone=Asia/Shanghai
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
      - no_proxy=${no_proxy}
      - M2_PROXY_HOST=${http_proxy_host}
      - M2_PROXY_PORT=${http_proxy_port}
      - M2_NO_PROXY=${no_proxy}
      - DOCKER_HOST=${DOCKER_HOST}
    restart: never

  # Continuous Delivery
  deck:
    image: devopsopen/docker-cd-deck
    ports:
      - "9085:9000"
    environment:
      - API_HOST=${DECK_API_HOST}:${DECK_API_PORT}/gate
      - BAKERY_HOST=${DECK_API_HOST}:${DECK_API_PORT}/rosco
      - DECK_HOST=0.0.0.0
      - DECK_PORT=${DECK_API_PORT}
      - PROTOCOL=http
      - AUTH_ENABLED=false
      - AUTH_ENDPOINT=${DECK_API_HOST}:${DECK_API_PORT}/gate/auth/users
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
      - no_proxy=${no_proxy}
    restart: never

  # continous quality assurance
  sonarqube:
    image: devopsopen/docker-cq-sonarqube
    ports:
      - "9000:9000"
    expose:
      - "9092"
    environment:
      - JAVA_OPTS=-Dhttp.proxyHost=${http_proxy_host}
                  -Dhttp.proxyPort=${http_proxy_port}
                  -Dhttps.proxyHost=${https_proxy_host}
                  -Dhttps.proxyPort=${https_proxy_port}
                  -Duser.timezone=Asia/Shanghai
    volumes_from:
      - databox
    restart: never

  # container resource monitor
  cadvisor:
    image: devopsopen/docker-cov-cadvisor
    ports:
      - "9998:8080"
    restart: never

  # hygieia : monitor
  hyapi:
    image: devopsopen/docker-cov-hyapi
    expose:
      - "8080"
    volumes_from:
      - databox
    links:
      - mongo:mongo
    env_file:
      - ./opendevops_pipeline.env
    restart: never

  hygui:
    image: devopsopen/docker-cov-hygui
    ports:
      - "9088:80"
    links:
      - hyapi:hygieia-api
    env_file:
      - ./opendevops_pipeline.env
    restart: never

  hyson:
    image: devopsopen/docker-cov-hyson
    links:
      - mongo:mongo
      - sonarqube
    env_file:
      - ./opendevops_pipeline.env
    restart: never

  hyjen:
    image: devopsopen/docker-cov-hyjen
    links:
      - mongo:mongo
      - jenkins
    env_file:
      - ./opendevops_pipeline.env
    restart: never

  hysvn:
    image: devopsopen/docker-cov-hysvn
    links:
      - mongo:mongo
    env_file:
      - ./opendevops_pipeline.env
    restart: never

  hygit:
    image: devopsopen/docker-cov-hygit
    links:
      - mongo:mongo
    env_file:
      - ./opendevops_pipeline.env
    restart: never

  hyk8s:
    image: devopsopen/docker-cov-hyk8s
    links:
      - mongo:mongo
    env_file:
      - ./opendevops_pipeline.env
    restart: never
